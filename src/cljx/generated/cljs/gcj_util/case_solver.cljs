;;This file autogenerated from 
;;
;;  src/cljx/shared/gcj_util/case_solver.cljx
;;
^{:line 1} (ns gcj-util.case-solver ^{:line 2} (:use [clojure.string :only [join]]))
^{:line 4} (defn result-to-line [{:keys [caseNumber result]}] ^{:line 6} (str "Case #" caseNumber ": " result))
^{:line 8} (defn format-results [results] ^{:line 10} (let [formattedResult ^{:line 11} (->> results ^{:line 12} (map result-to-line) ^{:line 13} (join "\n") ^{:line 14} (apply str))] formattedResult))
^{:line 17} (defn solve-problem [caseParser processCase input] ^{:line 19} (let [cases ^{:line 20} (caseParser input) results ^{:line 21} (map processCase cases)] ^{:line 22} (format-results results)))